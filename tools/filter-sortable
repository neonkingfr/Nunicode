#!/usr/bin/python

import sys


def usage():
	print '%s [SORTABLE]' % (sys.argv[0])
	print
	print '[SORTABLE] - file with a list of acceptable codepoints'


def pass_codepoint(codepoint, acceptable):
	return codepoint in acceptable


def load_acceptable(filename):
	return [codepoint.strip() for codepoint in open(filename, 'rt')]


if len(sys.argv) < 2:
	usage()
	sys.exit(1)

sortable = sys.argv[1]
acceptable = load_acceptable(sortable)

count = 0
for line in sys.stdin:
	codepoints = line.strip().split(' ')
	codepoint = codepoints[0] # if it's contraction - check first codepoint

	if not pass_codepoint(codepoint, acceptable):
		continue

	sink = len(codepoints) > 1 and sys.stderr or sys.stdout
	print >>sink, '%s %06X' % (' '.join(codepoints), count)

	count += 1
